schema {
  query: Query
}

interface Node {
  id: ID!
}

"what is needed for a post"
type Post implements Node {
  id: ID!
  title: String
  reviews: ReviewConnection
}

type Review implements Node {
  id: ID!
  stars: Int
  post: Post
}

type ReviewConnection {
  edges: [ReviewEdge]
  pageInfo: PageInfo!
}

type ReviewEdge {
  cursor: ID!
  node: Review
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: ID
  endCursor: ID
}

type PostConnection {
  edges: [ReviewEdge]
  pageInfo: PageInfo!
}

type PostEdge {
  cursor: ID!
  node: Post
}

type User implements Node {
  id: ID!
  lastname: String!
  reviews: ReviewConnection
}

type Query {
  post(id: ID): Post
  node(id: ID!): Node
}
